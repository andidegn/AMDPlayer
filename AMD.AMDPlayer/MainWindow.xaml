<!--<Window x:Name="mainwindow_root" 
        x:Class="AMD.AMDPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Properties="clr-namespace:AMD.AMDPlayer.Properties"
        xmlns:Main="AMD.AMDPlayer"
        Title="AMDPlayer" 
        MinWidth="250"
        MinHeight="80"
        Top="{Binding top, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Left="{Binding left, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Height="{Binding height, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Width="{Binding width, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        WindowStyle="None"
        Topmost="{Binding ElementName=main_context_view_always_on_top, Path=IsChecked, Mode=OneWay}"
        Background="{x:Null}"
        AllowsTransparency="True"
        ResizeMode="CanMinimize"
        Icon="Images\Film.ico"
        AllowDrop="True" 
        Loaded="mainwindow_root_loaded"
        PreviewMouseDoubleClick="mainwindow_toggle_fullscreen"
        MouseLeftButtonDown="mainWindow_MouseLeftButtonDown"
        MouseRightButtonDown="mainwindow_root_show_components"
        PreviewMouseMove="mainwindow_root_show_components" 
        MouseLeftButtonUp="mainwindow_root_MouseLeftButtonUp"
        PreviewKeyDown="mainwindow_root_KeyDown"
        KeyUp="mainwindow_root_KeyUp"
        MouseWheel="mainwindow_root_MouseWheel" Closing="mainwindow_root_Closing">
    <Window.Resources>
        <Style TargetType="GridViewColumnHeader" x:Key="playlist_header">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <EventSetter Event="MouseDoubleClick" Handler="lvi_DoubleClick" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="lv_playlist_MouseLeftButtonDown" />
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="lv_playlist_MouseLeftButtonUp" />
            <Setter Property="ToolTip" Value="{Binding Path=FilePath}"/>
        </Style>
        --><!-- Maybe able to resize -->
        <!--<Style TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None"></Setter>
            <Setter Property="AllowsTransparency" Value="True"></Setter>
            <Setter Property="ResizeMode" Value="CanResize"></Setter>
            <Setter Property="Background" Value="#FFF"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Margin="10">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10"/>
                            </Border.Effect>
                            <Grid>
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter Name="ContentPresenter" ClipToBounds="True"></ContentPresenter>
                                </Border>
                                <Grid x:Name="ResizeDummies">
                                    <Line Cursor="SizeNS" MouseDown="p_OnSizeN" X1="0" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="0" Y2="0" Stroke="Transparent" VerticalAlignment="Top"></Line>
                                    <Line Cursor="SizeNS" MouseDown="p_OnSizeS" X1="0" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" VerticalAlignment="Bottom"></Line>
                                    <Line Cursor="SizeWE" MouseDown="p_OnSizeW" X1="0" X2="0" StrokeThickness="4" Y1="0" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" HorizontalAlignment="Left"></Line>
                                    <Line Cursor="SizeWE" MouseDown="p_OnSizeE" X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="0" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" HorizontalAlignment="Right"></Line>
                                    <Rectangle Cursor="SizeNWSE" MouseDown="p_OnSizeNW" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    <Rectangle Cursor="SizeNESW" MouseDown="p_OnSizeNE" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Top" HorizontalAlignment="Right" />
                                    <Rectangle Cursor="SizeNESW" MouseDown="p_OnSizeSW" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                                    <Rectangle Cursor="SizeNWSE" MouseDown="p_OnSizeSE" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                                </Grid>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="ResizeMode" Value="CanMinimize">
                                <Setter TargetName="ResizeDummies" Property="Visibility" Value="Collapsed"></Setter>
                            </Trigger>
                            <Trigger Property="ResizeMode" Value="NoResize">
                                <Setter TargetName="ResizeDummies" Property="Visibility" Value="Collapsed"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>--><!--

        <System:Double x:Key="variable_opacity_low">0.45</System:Double>

        --><!--Control colors.--><!--
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">LawnGreen</Color>
        <Color x:Key="ControlMediumColor">Black</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        --><!--Border colors--><!--
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        --><!--Control-specific resources.--><!--
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        --><!-- Storyboards --><!--
        <Storyboard x:Key="glow_fade_in">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                   Storyboard.TargetName="Glow"
                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="glow_fade_out">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetName="Glow"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                        Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="opacity_fade_in">
            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="opacity_fade_out">
            <DoubleAnimation To="{StaticResource variable_opacity_low}" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="gray_to_white">
            <ColorAnimation To="LawnGreen" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>
        <Storyboard x:Key="white_to_gray">
            <ColorAnimation To="Gray" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>
        <Storyboard x:Key="white_to_lightGray">
            <ColorAnimation To="LightGray" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>

        --><!--<RadialGradientBrush x:Key="border_glow_button">
            <RadialGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.702" ScaleY="2.743" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform X="-0.368" Y="-0.152" />
                </TransformGroup>
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="LawnGreen" Offset="0" />
            <GradientStop Color="#44006400" Offset="0.75" />
        </RadialGradientBrush>--><!--





        <Style x:Key="slider_progress_style" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="10" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse" StrokeThickness="0.5">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.9" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

















        --><!--<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#997cfc00"/>--><!--
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="LawnGreen" Offset=".5"/>
            <GradientStop Color="DarkGreen" Offset=".5"/>
        </LinearGradientBrush>
        --><!--<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>--><!--
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#44AEB1AF" Offset="0.1"/>
            <GradientStop Color="#44ffffff" Offset=".9"/>
        </LinearGradientBrush>


        --><!--<Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>--><!--
        <Style x:Key="slider_repeat_button_increase" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="slider_repeat_button_decrease" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                                <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                                <Border x:Name="TrackBackground" 
                                        Background="{StaticResource HorizontalSliderTrackNormalBackground}"
                                        BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}"                                        
                                        BorderThickness="1" CornerRadius="1"
                                        Margin="5,0" VerticalAlignment="Center" Height="3.0" Grid.Row="1" >
                                    <Canvas Margin="-6,-1">
                                        <Rectangle Visibility="Visible" 
                                                   x:Name="PART_SelectionRange" 
                                                   Height="4.0" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" 
                                                   StrokeThickness="1.0"/>
                                    </Canvas>
                                </Border>

                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource slider_repeat_button_decrease}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource slider_repeat_button_increase}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource slider_progress_style}" Background="Black"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
























        --><!--<Style TargetType="Slider" x:Name="volume_slider">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider" x:Name="volume_slider_templet">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <PathGeometry x:Key="Triangle">
                                <PathFigure StartPoint="0,1">
                                    <LineSegment Point="1,1"/>
                                    <LineSegment Point="1,0"/>
                                    <LineSegment Point="0,1"/>
                                </PathFigure>
                            </PathGeometry>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid>
                                <Grid.OpacityMask>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <GeometryDrawing Brush="Black" Geometry="{StaticResource Triangle}"/>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Grid.OpacityMask>
                                <Track Name="PART_Track" Value="{TemplateBinding Value}">
                                    <Track.Thumb>
                                        <Thumb Width="10" Background="{TemplateBinding Background}">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="{TemplateBinding Background}"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="{TemplateBinding Background}" Command="Slider.DecreaseLarge"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Background="Transparent" Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <Path
                        Data="{StaticResource Triangle}"
                        Stretch="Fill"
                        Stroke="Black"
                        StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style TargetType="Label">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>--><!--
        <Style TargetType="Label">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Foreground" Value="Gray" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                    <BeginStoryboard Storyboard="{StaticResource gray_to_white}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                    <BeginStoryboard Storyboard="{StaticResource white_to_gray}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
        --><!--<Style TargetType="Label" x:Key="lbl_duration_style">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Foreground" Value="LightGray" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                    <BeginStoryboard Storyboard="{StaticResource gray_to_white}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                    <BeginStoryboard Storyboard="{StaticResource white_to_lightGray}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>--><!--
        <Style TargetType="Button" x:Key="ImageButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Height" Value="35" />
            <Setter Property="Width" Value="35" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform CenterX="17" CenterY="17"></RotateTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="3,0,3,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Glow" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ButtonBase.MouseLeftButtonUp">
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="360" Duration="0:0:0.2" RepeatBehavior="0:0:0.05"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="ToggleSwitchStyle">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                        </ControlTemplate.Resources>
                        <Grid MinWidth="36"
                          MinHeight="15"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2"
                                BorderBrush="LightGray"
                                Background="Black"
                                CornerRadius="6"
                                BorderThickness="1"></Border>
                            <TextBlock x:Name="OnText"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               Text="ON"
                               FontFamily="/CvisBuilder;Component/Resources/Font/#Segoe WP"
                               FontWeight="Light"
                               VerticalAlignment="Center"
                                       Margin="0,1,0,0"
                               Foreground="LawnGreen"
                               FontSize="9"></TextBlock>
                            <TextBlock x:Name="OffText"
                               Grid.Column="1"
                               HorizontalAlignment="Center"
                               FontFamily="/CvisBuilder;Component/Resources/Font/#Segoe WP"
                               FontWeight="Light"
                               Text="OFF"
                               VerticalAlignment="Center"
                                       Margin="0,1,0,0"
                               Foreground="Gray"
                               FontSize="9"></TextBlock>
                            <Border Name="Thumb"
                                Grid.Column="0"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Margin="3"
                                CornerRadius="4"
                                Background="#222222">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*" />
                                        <RowDefinition Height="0.5*" />
                                    </Grid.RowDefinitions>
                                    <Border Opacity="0"
                                        HorizontalAlignment="Stretch"
                                        x:Name="Glow"
                                        Width="Auto"
                                        Grid.RowSpan="2"
                                        CornerRadius="5">
                                        <Border.Background>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.702" ScaleY="2.743" />
                                                        <SkewTransform AngleX="0" AngleY="0" />
                                                        <RotateTransform Angle="0" />
                                                        <TranslateTransform X="-0.368" Y="-0.152" />
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="LawnGreen" Offset="0" />
                                                <GradientStop Color="#44006400" Offset="0.75" />
                                            </RadialGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch"
                                        Margin="0,0,0,0"
                                        x:Name="shine"
                                        Width="Auto"
                                        CornerRadius="5,5,10,10">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                                <GradientStop Color="#99FFFFFF" Offset="0" />
                                                <GradientStop Color="#33FFFFFF" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource glow_fade_in}" />
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="False">
                                        <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource glow_fade_out}" />
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                            <Trigger Property="IsChecked"
                                 Value="true">
                                <Setter Property="Grid.Column"
                                    TargetName="Thumb"
                                    Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.4" />
                                <Setter TargetName="OnText" Property="Foreground" Value="LightGray"></Setter>
                                <Setter TargetName="OffText" Property="Foreground" Value="LightGray"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="shine" Value="0.6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            --><!-- Set some style here --><!--
        </Style>
    </Window.Resources>
    <Border x:Name="border_main" 
            CornerRadius="0"
            BorderBrush="#FFB9B9B9"
            Background="{Binding main_border_background, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
            BorderThickness="{Binding main_border_thickness, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}">
        --><!-- margin should be 0,0,24,24 for dropshadow to work-->
        <!--<Border.Effect>
            <DropShadowEffect Color="Gray"
                              Opacity=".70"
                              BlurRadius="20"
                              ShadowDepth="10" />
        </Border.Effect>--><!--

        <Grid x:Name="root">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="{Binding ElementName=grid_bottom_controls, Path=Height}" />
            </Grid.RowDefinitions>
            <Grid x:Name="grid_media" 
                  Grid.RowSpan="{Binding ml_row_span, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    --><!--<ColumnDefinition Width="5"/>--><!--
                    <ColumnDefinition Width="{Binding gridsplitter_width, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" MaxWidth="800" MinWidth="140px" />
                </Grid.ColumnDefinitions>
                <GridSplitter x:Name="gs_main" 
                          Focusable="False" 
                          Panel.ZIndex="-1" 
                          HorizontalAlignment="Stretch" 
                          Grid.Row="0" 
                          Grid.Column="1"
                          Visibility="{Binding ElementName=lv_playlist, Path=Visibility}"
                          Width="5"/>
                <Label x:Name="lbl_title"
                       Grid.Column="0"
                       Grid.ColumnSpan="3"
                       Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                       Content="AMD Player loaded" 
                       Panel.ZIndex="1" 
                       HorizontalAlignment="Stretch" 
                       Margin="0,0,0,0" 
                       VerticalAlignment="Top" 
                       Height="26" 
                       Grid.RowSpan="2" />

                <Border x:Name="component_state_flag"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top" 
                        Panel.ZIndex="10" 
                        Width="40" 
                        Height="19" 
                        Visibility="{Binding component_state_flag_visibility, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        ToolTip="Close" 
                        Margin="0,-2,-2,0" >
                    <Button x:Name="btn_exit"
                            Style="{StaticResource ImageButton}" 
                            Panel.ZIndex="11" 
                            Content="X"
                            Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Height="Auto"
                            Width="Auto"
                            Margin="-1"
                            Click="btn_exit_Click" 
                            Background="#FFB04949" 
                            FontFamily="Arial Black" 
                            ToolTip="Close" 
                            FontStretch="Expanded" 
                            RenderTransformOrigin="0.5,0.5" 
                            FontSize="11"/>
                </Border>
                <Border x:Name="border_media_element"
                        Grid.ColumnSpan="{Binding ml_col_span, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        BorderThickness="0"
                        Drop="ml_main_Drop">
                    <Border.Background>
                        <ImageBrush ImageSource="Images\logo.png" />
                    </Border.Background>
                    <MediaElement 
                        x:Name="ml_main"
                        Stretch="{Binding ml_aspect, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Panel.ZIndex="5"
                        Focusable="True"
                        LoadedBehavior="Manual" 
                        Volume="{Binding ElementName=sl_volume, Path=Value, Mode=TwoWay}"
                        MouseDown="ml_main_MouseDown"
                        MediaOpened="ml_main_MediaOpened"
                        MediaFailed="ml_main_MediaFailed"
                        MediaEnded="ml_main_MediaEnded">
                    </MediaElement>
                </Border>
                <ListView x:Name="lv_playlist" 
                          Grid.Column="2"
                          Panel.ZIndex="5"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          Visibility="{Binding playlist_visible, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          BorderBrush="White"
                          SelectionMode="Single"
                          Focusable="True"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          SelectionChanged="lv_playlist_SelectionChanged"
                          KeyDown="lv_playlist_KeyDown"
                          Drop="lv_playlist_Drop">
                    <ListView.ContextMenu>
                        <ContextMenu>
                            <MenuItem x:Name="lv_playlist_context_sort_by_lable" Header="Sort by _Lable" InputGestureText="L" Click="lv_playlist_context_sort_by_lable_Click" />
                            <MenuItem x:Name="lv_playlist_context_sort_by_path" Header="Sort by _Path" InputGestureText="P" Click="lv_playlist_context_sort_by_path_Click" />
                            <Separator />
                            <MenuItem x:Name="lv_context_clear_playlist" Header="Clear Playlist" Click="lv_context_clear_playlist_Click" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource playlist_header}">
                            <GridViewColumn Header="" x:Name="col1" DisplayMemberBinding="{Binding test}"/>
                            <GridViewColumn Width="{Binding ElementName=helperField, Path=ActualWidth}" DisplayMemberBinding="{Binding Title}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
                --><!--This is the hidden helper Grid which does the resizing --><!--
                <Grid Visibility="Hidden" Grid.Column="2" >
                    <Grid.ColumnDefinitions>
                        --><!--Width is bound to width of the first GridViewColumn --><!--
                        <ColumnDefinition Width="{Binding ElementName=col1, Path=ActualWidth}"/>
                        --><!--Width is set to "Fill"--><!--
                        <ColumnDefinition Width="*"/>
                        --><!--Correction Width--><!--
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    --><!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid--><!--
                    <Grid Grid.Column="1" x:Name="helperField"/>
                </Grid>
            </Grid>
            <Grid x:Name="grid_bottom_controls"
                  Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding ElementName=grid_sl_progress, Path=Height}" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid x:Name="grid_sl_progress" 
                      Grid.Row="0"
                      Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                      Height="16" 
                      PreviewMouseLeftButtonDown="sl_progress_PreviewMouseLeftButtonDown"
                      PreviewMouseLeftButtonUp="sl_progress_PreviewMouseLeftButtonUp"
                      MouseMove="grid_sl_progress_MouseMove">
                    <Grid.ToolTip>
                        <ToolTip x:Name="tt_sl_progress">
                        </ToolTip>
                    </Grid.ToolTip>
                    <Slider x:Name="sl_progress" 
                            Style="{StaticResource MyCustomStyleForSlider}"
                            IsMoveToPointEnabled="True"
                            Focusable="False"
                            Opacity="{StaticResource variable_opacity_low}"
                            Value="{Binding ElementName=ml_main, Path=Position.TotalMilliseconds, Mode=OneWay}"
                            Panel.ZIndex="8"
                            VerticalAlignment="Center"
                            Maximum="0"
                            ValueChanged="sl_progress_ValueChanged" LargeChange="30" SmallChange="1" Margin="0,0,0,0"
                        >
                    </Slider>
                </Grid>
                <Grid x:Name="grid_btn_duration_volume"
                      Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=panel_buttons, Path=Width}" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel x:Name="panel_buttons" 
                                Grid.Column="0"
                                Height="40" 
                                Panel.ZIndex="8" 
                                Orientation="Horizontal" 
                                Visibility="{Binding ElementName=component_state_flag, Path=Visibility}">
                        <Button x:Name="btn_open" Background="{DynamicResource Eject}" Style="{StaticResource ImageButton}" ToolTip="Browse" Click="btn_open_Click" />
                        <Button x:Name="btn_prev" Background="{DynamicResource Track_prev}" Style="{StaticResource ImageButton}" ToolTip="Previous" Click="btn_prev_Click" />
                        <Button x:Name="btn_play" Background="{DynamicResource Play_fwd}" Style="{StaticResource ImageButton}" ToolTip="Play" Click="btn_play_Click" Height="36" Margin="3,2" />
                        <Button x:Name="btn_stop" Background="{DynamicResource Stop}" Style="{StaticResource ImageButton}" ToolTip="Stop" Click="btn_stop_Click" />
                        <Button x:Name="btn_next" Background="{DynamicResource Track_next}" Style="{StaticResource ImageButton}" ToolTip="Next" Click="btn_next_Click" />
                        <Button x:Name="btn_playlist_toggle" Background="{DynamicResource Playlist}" Style="{StaticResource ImageButton}" ToolTip="Toggle Playlist" Click="btn_playlist_toggle_Click" />
                        <Grid x:Name="grid_toggle_btn" 
                              Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label x:Name="lbl_shuffle" 
                                   Grid.Column="0" Grid.Row="0" 
                                   FontSize="9" 
                                   Content="Shuffle" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Right" 
                                   Margin="0,-4,0,0" />
                            <Label x:Name="lbl_auto_play_next_in_folder" 
                                   Grid.Column="0" Grid.Row="1" 
                                   FontSize="9" 
                                   Content="Auto play next" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Right" 
                                   Margin="0,-4,0,0" />
                            <ToggleButton x:Name="btn_shuffle" 
                                          Grid.Column="1"
                                          Grid.Row="0"
                                          Height="15"
                                          VerticalAlignment="Top"
                                          Style="{StaticResource ToggleSwitchStyle}" 
                                          IsChecked="{Binding shuffle, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                          ToolTip="Toggle Random" />
                            <ToggleButton x:Name="btn_auto_play_next_in_folder" 
                                          Grid.Column="1"
                                          Grid.Row="1"
                                          Height="15"
                                          VerticalAlignment="Top"
                                          Style="{StaticResource ToggleSwitchStyle}" 
                                          IsChecked="{Binding auto_play_next_in_folder, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                          ToolTip="Auto play next in folder" />
                        </Grid>
                    </StackPanel>
                    <Grid x:Name="grid_duration_and_volume"
                          Grid.Column="1"
                          Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="{Binding ElementName=sl_volume, Path=Width}" />
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lbl_progress"
                               Grid.Column="0"
                               MouseLeftButtonDown="lbl_progress_MouseLeftButtonDown"/>
                        <Label x:Name="lbl_devider"
                               Grid.Column="1"
                               Content="/" />
                        <Label x:Name="lbl_duration"
                               Grid.Column="2"/>
                        <Slider x:Name="sl_volume" 
                                Style="{StaticResource MyCustomStyleForSlider}"
                                Grid.Column="3"
                                Focusable="False"
                                Opacity="{StaticResource variable_opacity_low}"
                                IsMoveToPointEnabled="True"
                                HorizontalAlignment="Right" 
                                VerticalAlignment="Center" 
                                Maximum="1" 
                                TickFrequency="0.1" 
                                Value="{Binding volume_value, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                ToolTip="Volume" 
                                Width="80" 
                                LargeChange="0.1" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
    <Window.ContextMenu>
        <ContextMenu x:Name="main_context">
            <MenuItem x:Name="main_context_aspect_submenu" 
                      Header="_Aspect"
                      InputGestureText="A">
                <MenuItem x:Name="main_context_aspect_normal" 
                          Header="_Normal" 
                          InputGestureText="Ctrl+1"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_normal, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_normal_Click" />
                <MenuItem x:Name="main_context_aspect_zoom" 
                          Header="_Zoom" 
                          InputGestureText="Ctrl+2"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_zoom, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_zoom_Click" />
                <MenuItem x:Name="main_context_aspect_stretch" 
                          Header="_Stretch" 
                          InputGestureText="Ctrl+3"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_stretch, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_stretch_Click" />
            </MenuItem>
            <Separator />
            <MenuItem x:Name="main_context_appearence_submenu" 
                      Header="_Aspect"
                      InputGestureText="A">
                <MenuItem x:Name="main_context_appearence_gb_colour" 
                          Header="_Background Color" 
                          Click="main_context_appearence_gb_colour_Click" />
                <MenuItem x:Name="main_context_appearence_zoom" 
                          Header="_Zoom" 
                          InputGestureText="Ctrl+2"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_zoom, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_zoom_Click" />
                <MenuItem x:Name="main_context_appearence_stretch" 
                          Header="_Stretch" 
                          InputGestureText="Ctrl+3"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_stretch, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_stretch_Click" />
            </MenuItem>
            <Separator />
            <MenuItem x:Name="main_context_view_submenu"
                      Header="_View"
                      InputGestureText="V">
                <MenuItem x:Name="main_context_view_always_on_top"
                          Header="_Always On Top"
                          InputGestureText="Ctrl+T,A"
                          IsCheckable="True"
                          IsChecked="{Binding ml_always_on_top, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                          Click="main_context_view_always_on_top_Click"/>
                <MenuItem x:Name="main_context_view_always_on_top_when_playing"
                          Header="Always On Top When _Playing"
                          InputGestureText="Ctrl+T,P"
                          IsCheckable="True"
                          IsChecked="{Binding ml_always_on_top_when_playing, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                          Checked="main_context_view_always_on_top_when_playing_Click" 
                          Unchecked="main_context_view_always_on_top_when_playing_Click"/>

            </MenuItem>
            <Separator />
            <MenuItem x:Name="main_context_exit" 
                      Header="E_xit" 
                      InputGestureText="Ctrl+X"
                      Click="btn_exit_Click" />
        </ContextMenu>
    </Window.ContextMenu>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="Control your media" 
                         ThumbnailClipMargin="5">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo x:Name="tbtn_prev" 
                                     DismissWhenClicked="False"
                                     Description="Forward"
                                     ImageSource="Images\previous.png"
                                     Click="tbtn_prev_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_play"
                                     DismissWhenClicked="False"
                                     Description="Play"
                                     ImageSource="Images\play_fwd.png"
                                     Click="tbtn_play_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_pause"  
                                     DismissWhenClicked="False" 
                                     Description="Pause"
                                     ImageSource="Images\pause.png"
                                     Click="tbtn_pause_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_stop" 
                                     DismissWhenClicked="False"
                                     Description="Stop"
                                     ImageSource="Images\stop.png"
                                     Click="tbtn_stop_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_next" 
                                     DismissWhenClicked="False" 
                                     Description="Next"
                                     ImageSource="Images\next.png"
                                     Click="tbtn_next_Click"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
</Window>-->
<Window x:Name="mainwindow_root" 
        x:Class="AMD.AMDPlayer.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:Properties="clr-namespace:AMD.AMDPlayer.Properties"
        xmlns:Main="AMD.AMDPlayer"
        Title="AMDPlayer" 
        MinWidth="250"
        MinHeight="80"
        Top="{Binding top, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Left="{Binding left, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Height="{Binding height, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        Width="{Binding width, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
        WindowStyle="None"
        Topmost="{Binding ElementName=main_context_view_always_on_top, Path=IsChecked, Mode=OneWay}"
        Background="{x:Null}"
        AllowsTransparency="True"
        ResizeMode="CanMinimize"
        Icon="Images\Film.ico"
        AllowDrop="True" 
        Loaded="mainwindow_root_loaded"
        PreviewMouseDoubleClick="mainwindow_toggle_fullscreen"
        MouseLeftButtonDown="mainWindow_MouseLeftButtonDown"
        MouseRightButtonDown="mainwindow_root_show_components"
        MouseMove="mainwindow_root_show_components" 
        MouseLeftButtonUp="mainwindow_root_MouseLeftButtonUp"
        PreviewKeyDown="mainwindow_root_KeyDown"
        KeyUp="mainwindow_root_KeyUp"
        MouseWheel="mainwindow_root_MouseWheel" Closing="mainwindow_root_Closing">
    <Window.Resources>
        <Style TargetType="GridViewColumnHeader" x:Key="playlist_header">
            <Setter Property="Visibility" Value="Collapsed" />
        </Style>
        <Style TargetType="{x:Type ListViewItem}">
            <EventSetter Event="MouseDoubleClick" Handler="lvi_DoubleClick" />
            <EventSetter Event="PreviewMouseLeftButtonDown" Handler="lv_playlist_MouseLeftButtonDown" />
            <EventSetter Event="PreviewMouseLeftButtonUp" Handler="lv_playlist_MouseLeftButtonUp" />
            <Setter Property="ToolTip" Value="{Binding Path=FilePath}"/>
        </Style>
        <!-- Maybe able to resize -->
        <!--<Style TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None"></Setter>
            <Setter Property="AllowsTransparency" Value="True"></Setter>
            <Setter Property="ResizeMode" Value="CanResize"></Setter>
            <Setter Property="Background" Value="#FFF"></Setter>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Window}">
                        <Border Margin="10">
                            <Border.Effect>
                                <DropShadowEffect BlurRadius="10"/>
                            </Border.Effect>
                            <Grid>
                                <Border Background="{TemplateBinding Background}">
                                    <ContentPresenter Name="ContentPresenter" ClipToBounds="True"></ContentPresenter>
                                </Border>
                                <Grid x:Name="ResizeDummies">
                                    <Line Cursor="SizeNS" MouseDown="p_OnSizeN" X1="0" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="0" Y2="0" Stroke="Transparent" VerticalAlignment="Top"></Line>
                                    <Line Cursor="SizeNS" MouseDown="p_OnSizeS" X1="0" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="{TemplateBinding ActualHeight}" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" VerticalAlignment="Bottom"></Line>
                                    <Line Cursor="SizeWE" MouseDown="p_OnSizeW" X1="0" X2="0" StrokeThickness="4" Y1="0" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" HorizontalAlignment="Left"></Line>
                                    <Line Cursor="SizeWE" MouseDown="p_OnSizeE" X1="{TemplateBinding ActualWidth}" X2="{TemplateBinding ActualWidth}" StrokeThickness="4" Y1="0" Y2="{TemplateBinding ActualHeight}" Stroke="Transparent" HorizontalAlignment="Right"></Line>
                                    <Rectangle Cursor="SizeNWSE" MouseDown="p_OnSizeNW" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Top" HorizontalAlignment="Left" />
                                    <Rectangle Cursor="SizeNESW" MouseDown="p_OnSizeNE" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Top" HorizontalAlignment="Right" />
                                    <Rectangle Cursor="SizeNESW" MouseDown="p_OnSizeSW" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Left" />
                                    <Rectangle Cursor="SizeNWSE" MouseDown="p_OnSizeSE" Width="5" Height="5" Fill="Transparent" VerticalAlignment="Bottom" HorizontalAlignment="Right" />
                                </Grid>
                            </Grid>
                        </Border>

                        <ControlTemplate.Triggers>
                            <Trigger Property="ResizeMode" Value="CanMinimize">
                                <Setter TargetName="ResizeDummies" Property="Visibility" Value="Collapsed"></Setter>
                            </Trigger>
                            <Trigger Property="ResizeMode" Value="NoResize">
                                <Setter TargetName="ResizeDummies" Property="Visibility" Value="Collapsed"></Setter>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <System:Double x:Key="variable_opacity_low">0.45</System:Double>

        <!--Control colors.-->
        <Color x:Key="WindowColor">#FFE8EDF9</Color>
        <Color x:Key="ContentAreaColorLight">#FFC5CBF9</Color>
        <Color x:Key="ContentAreaColorDark">#FF7381F9</Color>

        <Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
        <Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
        <Color x:Key="DisabledForegroundColor">#FF888888</Color>

        <Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
        <Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

        <Color x:Key="ControlLightColor">LawnGreen</Color>
        <Color x:Key="ControlMediumColor">Black</Color>
        <Color x:Key="ControlDarkColor">#FF211AA9</Color>

        <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
        <Color x:Key="ControlPressedColor">#FF211AA9</Color>


        <Color x:Key="GlyphColor">#FF444444</Color>
        <Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

        <!--Border colors-->
        <Color x:Key="BorderLightColor">#FFCCCCCC</Color>
        <Color x:Key="BorderMediumColor">#FF888888</Color>
        <Color x:Key="BorderDarkColor">#FF444444</Color>

        <Color x:Key="PressedBorderLightColor">#FF888888</Color>
        <Color x:Key="PressedBorderDarkColor">#FF444444</Color>

        <Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
        <Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

        <Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

        <!--Control-specific resources.-->
        <Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
        <Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
        <Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

        <Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

        <LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
            <GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
            <GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
        </LinearGradientBrush>

        <LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#000000FF"
                    Offset="0" />
                    <GradientStop Color="#600000FF"
                    Offset="0.4" />
                    <GradientStop Color="#600000FF"
                    Offset="0.6" />
                    <GradientStop Color="#000000FF"
                    Offset="1" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
        </LinearGradientBrush>


        <!-- Storyboards -->
        <Storyboard x:Key="glow_fade_in">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                   Storyboard.TargetName="Glow"
                                   Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                                      Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="glow_fade_out">
            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00"
                                       Storyboard.TargetName="Glow"
                                       Storyboard.TargetProperty="(UIElement.Opacity)">
                <SplineDoubleKeyFrame KeyTime="00:00:00.4000000"
                                        Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="opacity_fade_in">
            <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="opacity_fade_out">
            <DoubleAnimation To="{StaticResource variable_opacity_low}" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
        </Storyboard>
        <Storyboard x:Key="gray_to_white">
            <ColorAnimation To="LawnGreen" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>
        <Storyboard x:Key="white_to_gray">
            <ColorAnimation To="Gray" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>
        <Storyboard x:Key="white_to_lightGray">
            <ColorAnimation To="LightGray" Duration="0:0:0.2" Storyboard.TargetProperty="(Label.Foreground).Color" />
        </Storyboard>

        <!--<RadialGradientBrush x:Key="border_glow_button">
            <RadialGradientBrush.RelativeTransform>
                <TransformGroup>
                    <ScaleTransform ScaleX="1.702" ScaleY="2.743" />
                    <SkewTransform AngleX="0" AngleY="0" />
                    <RotateTransform Angle="0" />
                    <TranslateTransform X="-0.368" Y="-0.152" />
                </TransformGroup>
            </RadialGradientBrush.RelativeTransform>
            <GradientStop Color="LawnGreen" Offset="0" />
            <GradientStop Color="#44006400" Offset="0.75" />
        </RadialGradientBrush>-->





        <Style x:Key="slider_progress_style" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Height" Value="10" />
            <Setter Property="Width" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Ellipse x:Name="Ellipse" StrokeThickness="0.5">
                            <Ellipse.Stroke>
                                <LinearGradientBrush StartPoint="0,0"
                                 EndPoint="0,1">
                                    <LinearGradientBrush.GradientStops>
                                        <GradientStopCollection>
                                            <GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
                                            <GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1.0" />
                                        </GradientStopCollection>
                                    </LinearGradientBrush.GradientStops>
                                </LinearGradientBrush>
                            </Ellipse.Stroke>
                            <Ellipse.Fill>
                                <LinearGradientBrush EndPoint="0.5,1"
                                 StartPoint="0.5,0">
                                    <GradientStop Color="{DynamicResource ControlMediumColor}" Offset="0.9" />
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal" />
                                    <VisualState x:Name="MouseOver">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource ControlMouseOverColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).(GradientBrush.GradientStops)[0].(GradientStop.Color)"
                                                Storyboard.TargetName="Ellipse">
                                                <EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
                                            </ColorAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                        </Ellipse>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

















        <!--<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#997cfc00"/>-->
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBackground" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="LawnGreen" Offset=".5"/>
            <GradientStop Color="DarkGreen" Offset=".5"/>
        </LinearGradientBrush>
        <!--<SolidColorBrush x:Key="HorizontalSliderTrackNormalBackground" Color="#FFE7EAEA"/>-->
        <LinearGradientBrush x:Key="HorizontalSliderTrackNormalBorder" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="#44AEB1AF" Offset="0.1"/>
            <GradientStop Color="#44ffffff" Offset=".9"/>
        </LinearGradientBrush>


        <!--<Style x:Key="SliderButtonStyle" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="true" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="slider_repeat_button_increase" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="slider_repeat_button_decrease" TargetType="{x:Type RepeatButton}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Rectangle Fill="Transparent"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MyCustomStyleForSlider" TargetType="{x:Type Slider}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Slider}">
                        <Border Background="{TemplateBinding Background}" 
                                BorderBrush="{TemplateBinding BorderBrush}" 
                                BorderThickness="{TemplateBinding BorderThickness}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto" MinHeight="{TemplateBinding MinHeight}"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <TickBar x:Name="TopTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Top" Height="4" Grid.Row="0"/>
                                <TickBar x:Name="BottomTick" Visibility="Collapsed" Fill="{TemplateBinding Foreground}" Placement="Bottom" Height="4" Grid.Row="0"/>
                                <Border x:Name="TrackBackground" 
                                        Background="{StaticResource HorizontalSliderTrackNormalBackground}"
                                        BorderBrush="{StaticResource HorizontalSliderTrackNormalBorder}"                                        
                                        BorderThickness="1" CornerRadius="1"
                                        Margin="5,0" VerticalAlignment="Center" Height="3.0" Grid.Row="1" >
                                    <Canvas Margin="-6,-1">
                                        <Rectangle Visibility="Visible" 
                                                   x:Name="PART_SelectionRange" 
                                                   Height="4.0" Fill="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" 
                                                   Stroke="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" 
                                                   StrokeThickness="1.0"/>
                                    </Canvas>
                                </Border>

                                <Track x:Name="PART_Track" Grid.Row="1">
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.DecreaseLarge}" Style="{StaticResource slider_repeat_button_decrease}"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="{x:Static Slider.IncreaseLarge}" Style="{StaticResource slider_repeat_button_increase}"/>
                                    </Track.IncreaseRepeatButton>
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Style="{StaticResource slider_progress_style}" Background="Black"/>
                                    </Track.Thumb>
                                </Track>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
























        <!--<Style TargetType="Slider" x:Name="volume_slider">
            <Setter Property="Background" Value="Gray"/>
            <Setter Property="Height" Value="20"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Slider" x:Name="volume_slider_templet">
                        <ControlTemplate.Resources>
                            <Style TargetType="{x:Type RepeatButton}">
                                <Setter Property="OverridesDefaultStyle" Value="true"/>
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter Property="Focusable" Value="false"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type RepeatButton}">
                                            <Border Background="{TemplateBinding Background}"/>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <PathGeometry x:Key="Triangle">
                                <PathFigure StartPoint="0,1">
                                    <LineSegment Point="1,1"/>
                                    <LineSegment Point="1,0"/>
                                    <LineSegment Point="0,1"/>
                                </PathFigure>
                            </PathGeometry>
                        </ControlTemplate.Resources>
                        <Grid>
                            <Grid>
                                <Grid.OpacityMask>
                                    <DrawingBrush>
                                        <DrawingBrush.Drawing>
                                            <GeometryDrawing Brush="Black" Geometry="{StaticResource Triangle}"/>
                                        </DrawingBrush.Drawing>
                                    </DrawingBrush>
                                </Grid.OpacityMask>
                                <Track Name="PART_Track" Value="{TemplateBinding Value}">
                                    <Track.Thumb>
                                        <Thumb Width="10" Background="{TemplateBinding Background}">
                                            <Thumb.Template>
                                                <ControlTemplate TargetType="{x:Type Thumb}">
                                                    <Border Background="{TemplateBinding Background}"/>
                                                </ControlTemplate>
                                            </Thumb.Template>
                                        </Thumb>
                                    </Track.Thumb>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Background="{TemplateBinding Background}" Command="Slider.DecreaseLarge"/>
                                    </Track.DecreaseRepeatButton>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Background="Transparent" Command="Slider.IncreaseLarge"/>
                                    </Track.IncreaseRepeatButton>
                                </Track>
                            </Grid>
                            <Path
                        Data="{StaticResource Triangle}"
                        Stretch="Fill"
                        Stroke="Black"
                        StrokeThickness="1"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <!--<Style TargetType="Label">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>-->
        <Style TargetType="Label">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Foreground" Value="Gray" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                    <BeginStoryboard Storyboard="{StaticResource gray_to_white}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                    <BeginStoryboard Storyboard="{StaticResource white_to_gray}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>
        <!--<Style TargetType="Label" x:Key="lbl_duration_style">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Foreground" Value="LightGray" />
            <Style.Triggers>
                <EventTrigger RoutedEvent="UIElement.MouseEnter">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                    <BeginStoryboard Storyboard="{StaticResource gray_to_white}" />
                </EventTrigger>
                <EventTrigger RoutedEvent="UIElement.MouseLeave">
                    <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                    <BeginStoryboard Storyboard="{StaticResource white_to_lightGray}" />
                </EventTrigger>
            </Style.Triggers>
        </Style>-->
        <Style TargetType="Button" x:Key="ImageButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
            <Setter Property="Height" Value="32" />
            <Setter Property="Width" Value="33" />
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="RenderTransform">
                <Setter.Value>
                    <RotateTransform CenterX="17" CenterY="17"></RotateTransform>
                </Setter.Value>
            </Setter>
            <Setter Property="Margin" Value="3,0,3,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border x:Name="Glow" 
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                Background="{TemplateBinding Background}"
                                CornerRadius="0">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                            <EventTrigger RoutedEvent="ButtonBase.MouseLeftButtonUp">
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="True">
                                        <DoubleAnimation Storyboard.TargetProperty="RenderTransform.Angle" To="360" Duration="0:0:0.2" RepeatBehavior="0:0:0.05"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="ToggleButton" x:Key="ToggleSwitchStyle">
            <Setter Property="Opacity" Value="{StaticResource variable_opacity_low}" />
            <Setter Property="Height" Value="22" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <ControlTemplate.Resources>
                        </ControlTemplate.Resources>
                        <Grid MinWidth="36"
                          MinHeight="15"
                          Width="{TemplateBinding Width}"
                          Height="{TemplateBinding Height}"
                          Background="Transparent">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                                <ColumnDefinition Width="*"></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border Grid.ColumnSpan="2"
                                BorderBrush="LightGray"
                                Background="Black"
                                CornerRadius="6"
                                BorderThickness="1"></Border>
                            <TextBlock x:Name="OnText"
                               Grid.Column="0"
                               HorizontalAlignment="Center"
                               Text="ON"
                               FontFamily="/CvisBuilder;Component/Resources/Font/#Segoe WP"
                               FontWeight="Light"
                               VerticalAlignment="Center"
                                       Margin="0,1,0,0"
                               Foreground="LawnGreen"
                               FontSize="9"></TextBlock>
                            <TextBlock x:Name="OffText"
                               Grid.Column="1"
                               HorizontalAlignment="Center"
                               FontFamily="/CvisBuilder;Component/Resources/Font/#Segoe WP"
                               FontWeight="Light"
                               Text="OFF"
                               VerticalAlignment="Center"
                                       Margin="0,1,0,0"
                               Foreground="Gray"
                               FontSize="9"></TextBlock>
                            <Border Name="Thumb"
                                Grid.Column="0"
                                BorderBrush="Transparent"
                                BorderThickness="0"
                                Margin="3"
                                CornerRadius="4"
                                Background="#222222">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="0.5*" />
                                        <RowDefinition Height="0.5*" />
                                    </Grid.RowDefinitions>
                                    <Border Opacity="0"
                                        HorizontalAlignment="Stretch"
                                        x:Name="Glow"
                                        Width="Auto"
                                        Grid.RowSpan="2"
                                        CornerRadius="5">
                                        <Border.Background>
                                            <RadialGradientBrush>
                                                <RadialGradientBrush.RelativeTransform>
                                                    <TransformGroup>
                                                        <ScaleTransform ScaleX="1.702" ScaleY="2.743" />
                                                        <SkewTransform AngleX="0" AngleY="0" />
                                                        <RotateTransform Angle="0" />
                                                        <TranslateTransform X="-0.368" Y="-0.152" />
                                                    </TransformGroup>
                                                </RadialGradientBrush.RelativeTransform>
                                                <GradientStop Color="LawnGreen" Offset="0" />
                                                <GradientStop Color="#44006400" Offset="0.75" />
                                            </RadialGradientBrush>
                                        </Border.Background>
                                    </Border>
                                    <Border HorizontalAlignment="Stretch"
                                        Margin="0,0,0,0"
                                        x:Name="shine"
                                        Width="Auto"
                                        CornerRadius="5,5,10,10">
                                        <Border.Background>
                                            <LinearGradientBrush EndPoint="0.494,0.889" StartPoint="0.494,0.028">
                                                <GradientStop Color="#99FFFFFF" Offset="0" />
                                                <GradientStop Color="#33FFFFFF" Offset="1" />
                                            </LinearGradientBrush>
                                        </Border.Background>
                                    </Border>
                                </Grid>
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="UIElement.MouseEnter">
                                <BeginStoryboard Storyboard="{StaticResource glow_fade_in}" />
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_in}" />
                                <BeginStoryboard>
                                    <Storyboard AutoReverse="False">
                                        <DoubleAnimation To="1" Duration="0:0:0.2" Storyboard.TargetProperty="Opacity" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="UIElement.MouseLeave">
                                <BeginStoryboard Storyboard="{StaticResource glow_fade_out}" />
                                <BeginStoryboard Storyboard="{StaticResource opacity_fade_out}" />
                            </EventTrigger>
                            <Trigger Property="IsChecked"
                                 Value="true">
                                <Setter Property="Grid.Column"
                                    TargetName="Thumb"
                                    Value="1" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Opacity" Value="0.4" />
                                <Setter TargetName="OnText" Property="Foreground" Value="LightGray"></Setter>
                                <Setter TargetName="OffText" Property="Foreground" Value="LightGray"></Setter>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Opacity" TargetName="shine" Value="0.6" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="MenuItem">
            <!-- Set some style here -->
        </Style>
    </Window.Resources>
    <Border x:Name="border_main" 
            CornerRadius="0"
            BorderBrush="#FFB9B9B9"
            Background="{Binding main_border_background, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
            BorderThickness="{Binding main_border_thickness, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}">
        <!-- margin should be 0,0,24,24 for dropshadow to work-->
        <!--<Border.Effect>
            <DropShadowEffect Color="Gray"
                              Opacity=".70"
                              BlurRadius="20"
                              ShadowDepth="10" />
        </Border.Effect>-->

        <Grid x:Name="root">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="{Binding ElementName=grid_bottom_controls, Path=Height}" />
            </Grid.RowDefinitions>
            <Grid x:Name="grid_media" 
                  Grid.RowSpan="{Binding ml_row_span, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="5"/>
                    <!--<ColumnDefinition Width="5"/>-->
                    <ColumnDefinition Width="{Binding gridsplitter_width, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                      MaxWidth="800" 
                                      MinWidth="140px" />
                </Grid.ColumnDefinitions>
                <GridSplitter x:Name="gs_main" 
                          Focusable="False" 
                          Panel.ZIndex="-1" 
                          HorizontalAlignment="Stretch" 
                              Background="{Binding ElementName=component_state_flag, Path=Background, Mode=OneWay}"
                          Grid.Row="0" 
                          Grid.Column="1"
                          Visibility="{Binding ElementName=lv_playlist, Path=Visibility}"
                          Width="5"/>
                <Label x:Name="lbl_title"
                       Grid.Column="0"
                       Grid.ColumnSpan="3"
                       Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                       Content="AMD Player loaded" 
                       Panel.ZIndex="1" 
                       HorizontalAlignment="Stretch" 
                       Margin="0,0,0,0" 
                       VerticalAlignment="Top" 
                       Height="26" 
                       Grid.RowSpan="2" />

                <Border x:Name="component_state_flag"
                        Grid.Column="2"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Top" 
                        Panel.ZIndex="10" 
                        Width="40" 
                        Height="19" 
                        Visibility="{Binding component_state_flag_visibility, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        Background="{Binding component_state_flag_background, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        ToolTip="Close" 
                        Margin="0,-1,-1,0" >
                    <Button x:Name="btn_exit"
                            Style="{StaticResource ImageButton}" 
                            Panel.ZIndex="11" 
                            Content="&#10006;"
                            Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Height="Auto"
                            Width="Auto"
                            Margin="-1"
                            Click="btn_exit_Click" 
                            Background="#FFB04949" 
                            FontFamily="Arial Black" 
                            ToolTip="Close" 
                            FontStretch="Expanded" 
                            RenderTransformOrigin="0.5,0.5" 
                            FontSize="12"/>
                </Border>
                <Border x:Name="border_media_element"
                        Grid.ColumnSpan="{Binding ml_col_span, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        BorderThickness="0"
                        Drop="ml_main_Drop">
                    <Border.Background>
                        <ImageBrush ImageSource="Images\logo.png" />
                    </Border.Background>
                    <MediaElement 
                        x:Name="ml_main"
                        Stretch="{Binding ml_aspect, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Center"
                        Panel.ZIndex="5"
                        Focusable="True"
                        LoadedBehavior="Manual" 
                        Volume="{Binding ElementName=sl_volume, Path=Value, Mode=TwoWay}"
                        MouseDown="ml_main_MouseDown"
                        MediaOpened="ml_main_MediaOpened"
                        MediaFailed="ml_main_MediaFailed"
                        MediaEnded="ml_main_MediaEnded">
                    </MediaElement>
                </Border>
                <ListView x:Name="lv_playlist" 
                          Grid.Column="2"
                          Panel.ZIndex="5"
                          HorizontalAlignment="Stretch" 
                          VerticalAlignment="Stretch" 
                          Visibility="{Binding playlist_visible, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          SelectionMode="Single"
                          Focusable="True"
                          BorderThickness="0"
                          ScrollViewer.HorizontalScrollBarVisibility="Hidden"
                          SelectionChanged="lv_playlist_SelectionChanged"
                          KeyDown="lv_playlist_KeyDown"
                          Drop="lv_playlist_Drop">
                    <ListView.ContextMenu>
                        <ContextMenu>
							<MenuItem Header="_Sort by">
								<MenuItem x:Name="lv_playlist_context_sort_by_lable" Header="_Lable" InputGestureText="L" Click="lv_playlist_context_sort_by_lable_Click" />
								<MenuItem x:Name="lv_playlist_context_sort_by_path" Header="_Path" InputGestureText="P" Click="lv_playlist_context_sort_by_path_Click" />
							</MenuItem>
							<Separator />
                            <MenuItem x:Name="lv_context_clear_playlist" Header="Clear Playlist" Click="lv_context_clear_playlist_Click" />
                        </ContextMenu>
                    </ListView.ContextMenu>
                    <ListView.View>
                        <GridView ColumnHeaderContainerStyle="{StaticResource playlist_header}">
                            <GridViewColumn Header="" x:Name="col1" DisplayMemberBinding="{Binding test}"/>
                            <GridViewColumn Width="{Binding ElementName=helperField, Path=ActualWidth}" DisplayMemberBinding="{Binding Title}"/>
                        </GridView>
                    </ListView.View>
                </ListView>
                <!--This is the hidden helper Grid which does the resizing -->
                <Grid Visibility="Hidden" Grid.Column="2" >
                    <Grid.ColumnDefinitions>
                        <!--Width is bound to width of the first GridViewColumn -->
                        <ColumnDefinition Width="{Binding ElementName=col1, Path=ActualWidth}"/>
                        <!--Width is set to "Fill"-->
                        <ColumnDefinition Width="*"/>
                        <!--Correction Width-->
                        <ColumnDefinition Width="10"/>
                    </Grid.ColumnDefinitions>
                    <!--This is the hidden helper Field which is used to bind to, using the "Fill" column of the helper grid-->
                    <Grid Grid.Column="1" x:Name="helperField"/>
                </Grid>
            </Grid>
            <Grid x:Name="grid_bottom_controls"
                  Grid.Row="1"
                  Background="{Binding ElementName=component_state_flag, Path=Background, Mode=OneWay}">
                <Grid.RowDefinitions>
                    <RowDefinition Height="{Binding ElementName=grid_sl_progress, Path=Height}" />
                    <RowDefinition Height="40" />
                </Grid.RowDefinitions>
                <Grid x:Name="grid_sl_progress" 
                      Grid.Row="0"
                      Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                      Height="16" 
                      PreviewMouseLeftButtonDown="sl_progress_PreviewMouseLeftButtonDown"
                      PreviewMouseLeftButtonUp="sl_progress_PreviewMouseLeftButtonUp"
                      MouseMove="grid_sl_progress_MouseMove">
                    <Grid.ToolTip>
                        <ToolTip x:Name="tt_sl_progress">
                        </ToolTip>
                    </Grid.ToolTip>
                    <Slider x:Name="sl_progress" 
                            Style="{StaticResource MyCustomStyleForSlider}"
                            IsMoveToPointEnabled="True"
                            Focusable="False"
                            Opacity="{StaticResource variable_opacity_low}"
                            Value="{Binding ElementName=ml_main, Path=Position.TotalMilliseconds, Mode=OneWay}"
                            Panel.ZIndex="8"
                            VerticalAlignment="Center"
                            Maximum="0"
                            ValueChanged="sl_progress_ValueChanged" LargeChange="30" SmallChange="1" Margin="0,0,0,0"
                        >
                    </Slider>
                </Grid>
                <Grid x:Name="grid_btn_duration_volume"
                      Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="{Binding ElementName=panel_buttons, Path=Width}" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel x:Name="panel_buttons" 
                                Grid.Column="0"
                                Height="40" 
                                Panel.ZIndex="8" 
                                Orientation="Horizontal" 
                                Visibility="{Binding ElementName=component_state_flag, Path=Visibility}">
                        <Button x:Name="btn_open" Background="{DynamicResource Eject}" Style="{StaticResource ImageButton}" ToolTip="Browse" Click="btn_open_Click" />
                        <Button x:Name="btn_prev" Background="{DynamicResource Track_prev}" Style="{StaticResource ImageButton}" ToolTip="Previous" Click="btn_prev_Click" />
                        <Button x:Name="btn_play" Background="{DynamicResource Play_fwd}" Style="{StaticResource ImageButton}" ToolTip="Play" Click="btn_play_Click" Margin="3,2" />
                        <Button x:Name="btn_stop" Background="{DynamicResource Stop}" Style="{StaticResource ImageButton}" ToolTip="Stop" Click="btn_stop_Click" />
                        <Button x:Name="btn_next" Background="{DynamicResource Track_next}" Style="{StaticResource ImageButton}" ToolTip="Next" Click="btn_next_Click" />
                        <Button x:Name="btn_playlist_toggle" Background="{DynamicResource Playlist}" Style="{StaticResource ImageButton}" ToolTip="Toggle Playlist (Ctrl+7)" Click="btn_playlist_toggle_Click" />
                        <Grid x:Name="grid_toggle_btn" 
                              Height="35">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Label x:Name="lbl_shuffle" 
                                   Grid.Column="0" Grid.Row="0" 
                                   FontSize="9" 
                                   Content="Shuffle" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Right" 
                                   Margin="0,-4,0,0" />
                            <Label x:Name="lbl_auto_play_next_in_folder" 
                                   Grid.Column="0" Grid.Row="1" 
                                   FontSize="9" 
                                   Content="Auto play next" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Right" 
                                   Margin="0,-4,0,0" />
                            <ToggleButton x:Name="btn_shuffle" 
                                          Grid.Column="1"
                                          Grid.Row="0"
                                          Height="15"
                                          VerticalAlignment="Top"
                                          Style="{StaticResource ToggleSwitchStyle}" 
                                          IsChecked="{Binding shuffle, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                          ToolTip="Toggle Random" />
                            <ToggleButton x:Name="btn_auto_play_next_in_folder" 
                                          Grid.Column="1"
                                          Grid.Row="1"
                                          Height="15"
                                          VerticalAlignment="Top"
                                          Style="{StaticResource ToggleSwitchStyle}" 
                                          IsChecked="{Binding auto_play_next_in_folder, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                          ToolTip="Auto play next in folder" />
                        </Grid>
                    </StackPanel>
                    <Grid x:Name="grid_duration_and_volume"
                          Grid.Column="1"
                          Visibility="{Binding ElementName=component_state_flag, Path=Visibility}"
                          VerticalAlignment="Center"
                          HorizontalAlignment="Right">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="50*" />
                            <ColumnDefinition Width="{Binding ElementName=sl_volume, Path=Width}" />
                        </Grid.ColumnDefinitions>
                        <Label x:Name="lbl_progress"
                               Grid.Column="0"
                               MouseLeftButtonDown="lbl_progress_MouseLeftButtonDown"/>
                        <Label x:Name="lbl_devider"
                               Grid.Column="1"
                               Content="/" />
                        <Label x:Name="lbl_duration"
                               Grid.Column="2"/>
                        <Slider x:Name="sl_volume" 
                                Style="{StaticResource MyCustomStyleForSlider}"
                                Grid.Column="3"
                                Focusable="False"
                                Opacity="{StaticResource variable_opacity_low}"
                                IsMoveToPointEnabled="True"
                                HorizontalAlignment="Right" 
                                VerticalAlignment="Center" 
                                Maximum="1" 
                                TickFrequency="0.1" 
                                Value="{Binding volume_value, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                                ToolTip="Volume" 
                                Width="80" 
                                LargeChange="0.1" />
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
    </Border>
    <Window.ContextMenu>
        <ContextMenu x:Name="main_context">
            <MenuItem x:Name="main_context_aspect_submenu" 
                      Header="_Aspect"
                      InputGestureText="A">
                <MenuItem x:Name="main_context_aspect_normal" 
                          Header="_Normal" 
                          InputGestureText="Ctrl+1"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_normal, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_normal_Click" />
                <MenuItem x:Name="main_context_aspect_zoom" 
                          Header="_Zoom" 
                          InputGestureText="Ctrl+2"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_zoom, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_zoom_Click" />
                <MenuItem x:Name="main_context_aspect_stretch" 
                          Header="_Stretch" 
                          InputGestureText="Ctrl+3"
                          IsCheckable="True" 
                          IsChecked="{Binding aspect_stretch, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}" 
                          Click="main_context_aspect_stretch_Click" />
            </MenuItem>
            <MenuItem x:Name="main_context_appearance_submenu" 
                      Header="Ap_pearance"
                      InputGestureText="p">
                <MenuItem x:Name="main_context_appearence_gb_colour" 
                          Header="_Background Color" 
                          Click="main_context_appearence_gb_colour_Click" />
                <MenuItem x:Name="main_context_appearence_txt_colour" 
                          Header="_Text Color" 
                          Click="main_context_appearence_txt_colour_Click" />
            </MenuItem>
            <MenuItem x:Name="main_context_view_submenu"
                      Header="_View"
                      InputGestureText="V">
                <MenuItem x:Name="main_context_view_always_on_top"
                          Header="_Always On Top"
                          InputGestureText="Ctrl+T,A"
                          IsCheckable="True"
                          IsChecked="{Binding ml_always_on_top, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                          Checked="main_context_view_always_on_top_Changed"
                          Unchecked="main_context_view_always_on_top_Changed"/>
                <MenuItem x:Name="main_context_view_always_on_top_when_playing"
                          Header="Always On Top When _Playing"
                          InputGestureText="Ctrl+T,P"
                          IsCheckable="True"
                          IsChecked="{Binding ml_always_on_top_when_playing, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                          Checked="main_context_view_always_on_top_when_playing_Changed" 
                          Unchecked="main_context_view_always_on_top_when_playing_Changed"/>
				<Separator />
				<MenuItem x:Name="main_context_view_expanded"
                          Header="_Expanded"
                          InputGestureText="Ctrl+Shift+F / H"
                          IsCheckable="True"
                          IsChecked="{Binding expanded, Source={x:Static Properties:Settings.Default}, Mode=TwoWay}"
                          Checked="main_context_view_expanded_Checked" 
                          Unchecked="main_context_view_expanded_Unchecked"/>
				<MenuItem x:Name="main_context_view_fullscreen"
                          Header="_Fullscreen"
                          InputGestureText="F"
                          IsCheckable="True"
                          IsChecked="False"
                          Checked="main_context_view_fullscreen_Checked" 
                          Unchecked="main_context_view_fullscreen_Unchecked"/>
			</MenuItem>
            <Separator />
            <MenuItem x:Name="main_context_exit" 
                      Header="E_xit" 
                      InputGestureText="Ctrl+X"
                      Click="btn_exit_Click" />
        </ContextMenu>
    </Window.ContextMenu>
    <Window.TaskbarItemInfo>
        <TaskbarItemInfo Description="Control your media" 
                         ThumbnailClipMargin="5">
            <TaskbarItemInfo.ThumbButtonInfos>
                <ThumbButtonInfoCollection>
                    <ThumbButtonInfo x:Name="tbtn_prev" 
                                     DismissWhenClicked="False"
                                     Description="Forward"
                                     ImageSource="Images\previous.png"
                                     Click="tbtn_prev_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_play"
                                     DismissWhenClicked="False"
                                     Description="Play"
                                     ImageSource="Images\play_fwd.png"
                                     Click="tbtn_play_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_pause"  
                                     DismissWhenClicked="False" 
                                     Description="Pause"
                                     ImageSource="Images\pause.png"
                                     Click="tbtn_pause_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_stop" 
                                     DismissWhenClicked="False"
                                     Description="Stop"
                                     ImageSource="Images\stop.png"
                                     Click="tbtn_stop_Click"/>
                    <ThumbButtonInfo x:Name="tbtn_next" 
                                     DismissWhenClicked="False" 
                                     Description="Next"
                                     ImageSource="Images\next.png"
                                     Click="tbtn_next_Click"/>
                </ThumbButtonInfoCollection>
            </TaskbarItemInfo.ThumbButtonInfos>
        </TaskbarItemInfo>
    </Window.TaskbarItemInfo>
</Window>
